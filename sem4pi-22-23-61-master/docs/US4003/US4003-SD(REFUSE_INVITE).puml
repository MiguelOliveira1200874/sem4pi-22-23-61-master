@startuml
'http://plantuml.com/skinparam.html
skinparam handwritten true
skinparam monochrome true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

actor SystemUser as Actor
participant AcceptRefuseInvitesUI as UI
participant AuthzRegistry as AuthzRes
participant AuthorizationService as AuthzSvc
participant UserSession as UserS
participant AcceptRefuseInvitesController as InvitesController
participant AcceptRefuseInvitesService as Invitesvc
participant InviteRepository as Repo
participant "theInvite:Invite" as Invite


-> UI: Accept/Refuse meeting invites
activate UI
    UI -> AuthzRes : authz=authorizationService()
    activate AuthzRes
    deactivate AuthzRes
    UI -> AuthzSvc : s=session()
    activate AuthzSvc
    deactivate AuthzSvc
    UI -> UserS : myUser=authenticatedUser()
    activate UserS
    deactivate UserS

    UI -> InvitesController: create(InviteRepository)
    activate InvitesController
    deactivate InvitesController

    loop for each selected invite
    UI -> InvitesController: invitesReceived(myUser.username())
    activate InvitesController
    InvitesController -> Invitesvc : invitesReceived(username)
    activate Invitesvc
    Invitesvc -> Repo : findInvitesByReceiverUsername(username)
    activate Repo
    Repo --> Invitesvc
    deactivate Repo
    Invitesvc --> InvitesController
    deactivate Invitesvc
    InvitesController --> UI
    deactivate InvitesController
    UI --> Actor : ask user invite \nselection
    Actor -> UI : select and \nreject invite

    UI -> InvitesController : refuseInvite(theInvite)
    activate InvitesController
        InvitesController -> Invitesvc : refuseInvite(theInvite)
        activate Invitesvc
            Invitesvc -> Invite : setState(InviteState.REJECTED)
            activate Invite
            deactivate Invite
        deactivate Invitesvc
    deactivate InvitesController

deactivate UI
end
@enduml